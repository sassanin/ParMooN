/** ==========================================================================
#    This file is part of the finite element software ParMooN.
# 
#    ParMooN (cmg.cds.iisc.ac.in/parmoon) is a free finite element software  
#    developed by the research groups of Prof. Sashikumaar Ganesan (IISc, Bangalore),
#    Prof. Volker John (WIAS Berlin) and Prof. Gunar Matthies (TU-Dresden):
#
#    ParMooN is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    ParMooN is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with ParMooN.  If not, see <http://www.gnu.org/licenses/>.
#
#    If your company is selling a software using ParMooN, please consider 
#    the option to obtain a commercial license for a fee. Please send 
#    corresponding requests to sashi@iisc.ac.in

# =========================================================================*/ 
   
// ***********************************************************************
// P3 element, discontinuous, 3D Tetrahedra
// 
// Author:     Markus Wolff
//
// ***********************************************************************

static double D_T_P3_3D_CM[400] = {
    2400.000270366319,-12600.0008874325777,-12600.0027071968907,-12600.0014446784808,20160.0009741052563,40320.0060833796597,40320.0028214699414,20160.0055626813773,40320.0101806129242,20160.0019488477192,-10080.0003561955455,-30240.0034068293135,-30240.0013868140413,-30240.0062605094427,-60480.0106457556249,-30240.0017493218766,-10080.0031570559022,-30240.010309277568,-30240.0076037795588,-10080.0007415879027,
    -12600.0008874325777,105840.002950673937,52920.0095555666048,52920.0040438508731,-211680.003250046604,-282240.021545840078,-282240.00804695196,-70560.0203835152206,-141120.032678659918,-70560.0044618983084,120960.001184249937,272160.01204598305,272160.004009647062,181440.022917332331,362880.034661523299,181440.00395387123,30240.0119049821442,90720.034524176328,90720.0228720662999,30240.0011547935937,
    -12600.0027071968907,52920.0095555666048,105840.022757271974,52920.0176855119498,-70560.0111611062021,-282240.054046943376,-141120.037793901283,-211680.042795008747,-282240.09820125415,-70560.0288385544409,30240.0043041127392,181440.031679338746,90720.0203314148239,272160.050981697976,362880.106703056721,90720.0295746038173,120960.022725883842,272160.090823325852,181440.080377591745,30240.0137180526144,
    -12600.0014446784808,52920.0040438508731,52920.0176855119498,105840.005368920538,-70560.0037727144663,-141120.036583060719,-282240.007376211288,-70560.0395031326916,-282240.056503988104,-211680.00382900078,30240.0011695692374,90720.0190311979241,181440.00197698886,90720.0414145632676,362880.054645910917,272160.000222664501,30240.0237075263249,181440.063786087587,272160.036953315837,120959.999631301354,
    20160.0009741052563,-211680.003250046604,-70560.0111611062021,-70560.0037727144663,483840.003568597313,483840.02507943369,483840.007613639813,80640.0245102581539,161280.035333636013,80640.0030294462194,-302400.001290069486,-544320.013937487383,-544320.003823754261,-272160.027385976806,-544320.037772990763,-272160.002577515552,-30240.0146190936357,-90720.0387875903834,-90720.0232311772415,-30240.0000215763939,
    40320.0060833796597,-282240.021545840078,-282240.054046943376,-141120.036583060719,483840.02507943369,1290240.12781189987,645120.079391933512,483840.106077967153,645120.214325221954,161280.056623426557,-241920.00959951448,-1088640.07435429678,-544320.043130868115,-1088640.12508803746,-1451520.23516083811,-362880.059040278313,-241920.0586008229,-544320.204010986956,-362880.168864726322,-60480.0256642114255,
    40320.0028214699414,-282240.00804695196,-141120.037793901283,-282240.007376211288,483840.007613639813,645120.079391933512,1290240.00826098165,161280.086613732448,645120.110816906672,483839.998350762355,-241920.00238014225,-544320.041767256567,-1088640.00076106237,-362880.091897055856,-1451520.10871690349,-1088639.9911149391,-60480.052733157645,-362880.131769075699,-544320.065775724011,-241919.993047464348,
    20160.0055626813773,-70560.0203835152206,-211680.042795008747,-70560.0395031326916,80640.0245102581539,483840.106077967153,161280.086613732448,483840.075709991565,483840.200489141513,80640.068235175364,-30240.0096698496054,-272160.064215859864,-90720.0476920843357,-544320.095060582156,-544320.221953506116,-90720.0718740543234,-302400.03805678623,-544320.176857720362,-272160.171560897375,-30240.0341402420308,
    40320.0101806129242,-141120.032678659918,-282240.09820125415,-282240.056503988104,161280.035333636013,645120.214325221954,645120.110816906672,483840.200489141513,1290240.37196648633,483840.08058939944,-60480.012810513188,-362880.117396406364,-362880.05488434626,-544320.218616156722,-1451520.38455772679,-544320.074402918341,-241920.113668352278,-1088640.37231836584,-1088640.28023162903,-241920.033451245516,
    20160.0019488477192,-70560.0044618983084,-70560.0288385544409,-211680.00382900078,80640.0030294462194,161280.056623426557,483839.998350762355,80640.068235175364,483840.08058939944,483839.995623568946,-30240.0005107761826,-90720.027912220743,-272159.994317010045,-90720.069138680381,-544320.071767096175,-544319.98662183038,-30240.0423606441072,-272160.100043554674,-544320.04588640295,-302399.993201440549,
    -10080.0003561955455,120960.001184249937,30240.0043041127392,30240.0011695692374,-302400.001290069486,-241920.00959951448,-241920.00238014225,-30240.0096698496054,-60480.012810513188,-30240.0005107761826,201600.000461147632,302400.005289558787,302400.001196895144,120960.010709458555,241920.013732013293,120960.000367314569,10080.0058590520202,30240.014545172533,30240.0079466286334,10079.9996058106844,
    -30240.0034068293135,272160.01204598305,181440.031679338746,90720.0190311979241,-544320.013937487383,-1088640.07435429678,-544320.041767256567,-272160.064215859864,-362880.117396406364,-90720.027912220743,302400.005289558787,1088640.04287408921,544320.02283465513,816480.07486317365,1088640.12948791496,272160.029531313281,120960.03647096132,272160.11465448438,181440.089354966331,30240.0119613458373,
    -30240.0013868140413,272160.004009647062,90720.0203314148239,181440.00197698886,-544320.003823754261,-544320.043130868115,-1088640.00076106237,-90720.0476920843357,-362880.05488434626,-272159.994317010045,302400.001196895144,544320.02283465513,1088639.99869042495,272160.050946578383,1088640.05449366709,816479.990646171849,30240.0294065969356,181440.068833562982,272160.029039093992,120959.993241447053,
    -30240.0062605094427,181440.022917332331,272160.050981697976,90720.0414145632676,-272160.027385976806,-1088640.12508803746,-362880.091897055856,-544320.095060582156,-544320.218616156722,-90720.069138680381,120960.010709458555,816480.07486317365,272160.050946578383,1088640.1170124975,1088640.243902002,181440.0738150166,302400.050450621464,544320.197938643163,272160.181220518309,30240.0336805695697,
    -60480.0106457556249,362880.034661523299,362880.106703056721,362880.054645910917,-544320.037772990763,-1451520.23516083811,-1451520.10871690349,-544320.221953506116,-1451520.38455772679,-544320.071767096175,241920.013732013293,1088640.12948791496,1088640.05449366709,1088640.243902002,2903040.40239360556,1088640.06650575623,241920.127495316905,1088640.39419962023,1088640.27925281855,241920.026725903474,
    -30240.0017493218766,181440.00395387123,90720.0295746038173,272160.000222664501,-272160.002577515552,-362880.059040278313,-1088639.9911149391,-90720.0718740543234,-544320.074402918341,-544319.98662183038,120960.000367314569,272160.029531313281,816479.990646171849,181440.0738150166,1088640.06650575623,1088639.97741935658,30240.0452037056602,272160.099126852234,544320.036039048922,302399.987425403669,
    -10080.0031570559022,30240.0119049821442,120960.022725883842,30240.0237075263249,-30240.0146190936357,-241920.0586008229,-60480.052733157645,-302400.03805678623,-241920.113668352278,-30240.0423606441072,10080.0058590520202,120960.03647096132,30240.0294065969356,302400.050450621464,241920.127495316905,30240.0452037056602,201600.018072547187,302400.096863501763,120960.100327709195,10080.0217748870946,
    -30240.010309277568,90720.034524176328,272160.090823325852,181440.063786087587,-90720.0387875903834,-544320.204010986956,-362880.131769075699,-544320.176857720362,-1088640.37231836584,-272160.100043554674,30240.014545172533,272160.11465448438,181440.068833562982,544320.197938643163,1088640.39419962023,272160.099126852234,302400.096863501763,1088640.35462875618,816480.29545330978,120960.046020291498,
    -30240.0076037795588,90720.0228720662999,181440.080377591745,272160.036953315837,-90720.0232311772415,-362880.168864726322,-544320.065775724011,-272160.171560897375,-1088640.28023162903,-544320.04588640295,30240.0079466286334,181440.089354966331,272160.029039093992,272160.181220518309,1088640.27925281855,544320.036039048922,120960.100327709195,816480.29545330978,1088640.19906270504,302400.015760788752,
    -10080.0007415879027,30240.0011547935937,30240.0137180526144,120959.999631301354,-30240.0000215763939,-60480.0256642114255,-241919.993047464348,-30240.0341402420308,-241920.033451245516,-302399.993201440549,10079.9996058106844,30240.0119613458373,120959.993241447053,30240.0336805695697,241920.026725903474,302399.987425403669,10080.0217748870946,120960.046020291498,302400.015760788752,201599.994004255743

};

static void D_T_P3_3D_Funct(double xi, double eta, double zeta,
                          double *values)
{
  int nBF = 20; // number of basis functions
  double mon[]={1,xi,eta,zeta,xi*xi,xi*eta,xi*zeta,
                eta*eta,eta*zeta,zeta*zeta,
                xi*xi*xi,xi*xi*eta,xi*xi*zeta,
                xi*eta*eta,xi*eta*zeta,xi*zeta*zeta,
                eta*eta*eta,eta*eta*zeta,eta*zeta*zeta,zeta*zeta*zeta};
  memset(values, 0.0, nBF*SizeOfDouble);
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i] += D_T_P3_3D_CM[i+j*nBF]*mon[j];

    }
  }
}

static void D_T_P3_3D_DeriveXi(double xi, double eta, double zeta,
                             double *values)
{
  int nBF = 20; // number of basis functions
  double mon[]={0,1,0,0,2*xi,eta,zeta,
                0,0,0,
                3*xi*xi,2*xi*eta,2*xi*zeta,
                eta*eta,eta*zeta,zeta*zeta,
                0,0,0,0};
  memset(values, 0.0, nBF*SizeOfDouble);
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i] += D_T_P3_3D_CM[i+j*nBF]*mon[j];

    }
  }
}

static void D_T_P3_3D_DeriveEta(double xi, double eta, double zeta,
                             double *values)
{
  int nBF = 20; // number of basis functions
  double mon[]={0,0,1,0,0,xi,0,
                2*eta,zeta,0,
                0,xi*xi,0,
                xi*2*eta,xi*zeta,0,
                3*eta*eta,2*eta*zeta,zeta*zeta,0};
  memset(values, 0.0, nBF*SizeOfDouble);
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i] += D_T_P3_3D_CM[i+j*nBF]*mon[j];
    }
  }
}

static void D_T_P3_3D_DeriveZeta(double xi, double eta, double zeta,
                             double *values)
{
  int nBF = 20; // number of basis functions
  double mon[]={0,0,0,1,0,0,xi,
                0,eta,2*zeta,
                0,0,xi*xi,
                0,xi*eta,xi*2*zeta,
                0,eta*eta,eta*2*zeta,3*zeta*zeta};
  memset(values, 0.0, nBF*SizeOfDouble);
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i] += D_T_P3_3D_CM[i+j*nBF]*mon[j];

    }
  }
}

static void D_T_P3_3D_DeriveXiXi(double xi, double eta, double zeta,
                             double *values)
{
  int nBF = 20; // number of basis functions
  double mon[]={0,0,0,0,2,0,0,
                0,0,0,
                3*2*xi,2*eta,2*zeta,
                0,0,0,
                0,0,0,0};
  memset(values, 0.0, nBF*SizeOfDouble);
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i] += D_T_P3_3D_CM[i+j*nBF]*mon[j];

    }
  }
}

static void D_T_P3_3D_DeriveXiEta(double xi, double eta, double zeta,
                             double *values)
{
  int nBF = 20; // number of basis functions
  double mon[]={0,0,0,0,0,1,0,
                0,0,0,
                0,2*xi,0,
                2*eta,zeta,0,
                0,0,0,0};
  memset(values, 0.0, nBF*SizeOfDouble);
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i] += D_T_P3_3D_CM[i+j*nBF]*mon[j];

    }
  }
}

static void D_T_P3_3D_DeriveXiZeta(double xi, double eta, double zeta,
                             double *values)
{
  int nBF = 20; // number of basis functions
  double mon[]={0,0,0,0,0,0,1,
                0,0,0,
                0,0,2*xi,
                0,eta,2*zeta,
                0,0,0,0};
  memset(values, 0.0, nBF*SizeOfDouble);
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i] += D_T_P3_3D_CM[i+j*nBF]*mon[j];

    }
  }
}

static void D_T_P3_3D_DeriveEtaEta(double xi, double eta, double zeta,
                             double *values)
{
  int nBF = 20; // number of basis functions
  double mon[]={0,0,0,0,0,0,0,
                2,0,0,
                0,0,0,
                xi*2,0,0,
                3*2*eta,2*zeta,0,0};
  memset(values, 0.0, nBF*SizeOfDouble);
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i] += D_T_P3_3D_CM[i+j*nBF]*mon[j];

    }
  }
}

static void D_T_P3_3D_DeriveEtaZeta(double xi, double eta, double zeta,
                             double *values)
{
  int nBF = 20; // number of basis functions
  double mon[]={0,0,0,0,0,0,0,
                0,1,0,
                0,0,0,
                0,xi,0,
                0,eta*2,2*zeta,0};
  memset(values, 0.0, nBF*SizeOfDouble);
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i] += D_T_P3_3D_CM[i+j*nBF]*mon[j];

    }
  }
}

static void D_T_P3_3D_DeriveZetaZeta(double xi, double eta, double zeta,
                             double *values)
{
  int nBF = 20; // number of basis functions
  double mon[]={0,0,0,0,0,0,0,
                0,0,2,
                0,0,0,
                0,0,xi*2,
                0,0,eta*2,3*2*zeta};
  memset(values, 0.0, nBF*SizeOfDouble);
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i] += D_T_P3_3D_CM[i+j*nBF]*mon[j];

    }
  }
}

TBaseFunct3D *BF_D_T_P3_3D_Obj =
new TBaseFunct3D(20, BF_D_T_P3_3D, BFUnitTetrahedron,
                 D_T_P3_3D_Funct, D_T_P3_3D_DeriveXi,
                 D_T_P3_3D_DeriveEta, D_T_P3_3D_DeriveZeta,
                 D_T_P3_3D_DeriveXiXi, D_T_P3_3D_DeriveXiEta,
                 D_T_P3_3D_DeriveXiZeta, D_T_P3_3D_DeriveEtaEta,
                 D_T_P3_3D_DeriveEtaZeta, D_T_P3_3D_DeriveZetaZeta,
                 3, 1,
		 0, NULL);
