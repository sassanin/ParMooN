/** ==========================================================================
#    This file is part of the finite element software ParMooN.
# 
#    ParMooN (cmg.cds.iisc.ac.in/parmoon) is a free finite element software  
#    developed by the research groups of Prof. Sashikumaar Ganesan (IISc, Bangalore),
#    Prof. Volker John (WIAS Berlin) and Prof. Gunar Matthies (TU-Dresden):
#
#    ParMooN is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    ParMooN is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with ParMooN.  If not, see <http://www.gnu.org/licenses/>.
#
#    If your company is selling a software using ParMooN, please consider 
#    the option to obtain a commercial license for a fee. Please send 
#    corresponding requests to sashi@iisc.ac.in

# =========================================================================*/ 
   
// ***********************************************************************
// Raviart-Thomas element of second order on hexahedra, 3D
// ***********************************************************************

static double N_H_RT2_3D_CM[11664] = {
//using tschebyscheff points (see NF_N_H_RT2_3D.h)
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,-0.0625,-0,-0,-0,0,0,0,0,0,-0,0,0,0,0,-0,-0,0,0,0.0625,-0,0,0,-0,0,0,0,0,0,0,0,0,0,0.94921875,0,0,0,0,-0,-1.5820312,-0,-1.5820312,-0,-0,-0,-0,-0,0,-0,2.6367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,-0,-0,0.0625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0.0625,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0.94921875,-0,0,-0,-1.5820312,0,-0,-0,-1.5820312,-0,0,-0,0,-0,0,2.6367188,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,-0,0.0625,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,-0.0625,-0,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0.94921875,-0,0,-0,-1.5820312,0,-0,-1.5820312,0,-0,0,0,-0,0,2.6367188,-0,0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0.1875,0,-0,0,0,0,0,0,0,-0,0,0,0,0,0,0,-0,-0,-0.1875,0,0,-0,-0,0,0,0,0,0,0,0,0,0,-0,4.7460938,0,-0,-0,-0,0,-0,0,-7.9101562,-0,-7.9101562,0,-0,0,0,-0,13.183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,-0,-0.03608439,0,-0,0,0,0,0.03608439,-0,0,0,0,0,0,0,0,0,0,-0,-0.03608439,-0,-0,0,0,0,0.03608439,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,1.265625,-0,-0,0,-0,-0,-0,0,0,0,0,-2.109375,0,0,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,-0,0,-0.03608439,-0,0.03608439,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.03608439,-0,-0,-0,0,-0,-0.03608439,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,1.265625,0,0,-0,-0,-0,-0,-0,-0,-0,-2.109375,0,-0,0,0,0,0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0.03608439,0,0,-0,-0,-0,-0.03608439,0,0,0,0,0,-0,0,0,0,0,0,-0,0,-0.03608439,0,0.03608439,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,1.265625,0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-2.109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,-0,-0,0,-0,-0.1875,0,0,-0,-0,0,0,0,0,0,0,0,0,0,-0,0,0,0,-0.1875,-0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,-0,4.7460938,0,-0,0,-0,-0,-0,-7.9101562,-0,0,0,-7.9101562,0,0,-0,13.183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,-0.03608439,-0,-0,0,0,0,0.03608439,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0.03608439,0,-0.03608439,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,-0,1.265625,-0,-0,0,-0,-0,-0,-2.109375,0,0,0,0,0,0,0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,-0,0.03608439,-0,-0.03608439,0,-0,0,0,0,0,0,-0,0,0,0,0,0,-0.03608439,-0,-0,-0,0,0,0.03608439,-0,0,0,0,0,0,0,0,0,0,-0,0,0,1.265625,-0,0,0,-0,0,0,0,-0,-2.109375,-0,-0,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,-0,0,-0.03608439,-0,0.03608439,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0.03608439,-0,-0.03608439,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,-0,0,1.265625,0,-0,-0,-0,0,-0,-2.109375,-0,0,-0,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    -0,-0,-0,0,-0.1875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,-0.1875,-0,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,-0,0,4.7460938,0,-0,0,0,0,-0,-7.9101562,0,-0,-7.9101562,-0,-0,0,13.183594,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,-0,0.1875,0,0,0,-0,0,0,0,0,-0,0,0,0,0,0,0,-0,-0,-0.1875,0,-0,-0,0,0,0,0,0,0,0,0,0,0,-0.94921875,-0,-0,-0,-0,0,1.5820312,0,1.5820312,0,0,0,0,0,-0,0,-2.6367188,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,-0,0.04166667,0,0,-0.08333333,-0,-0,0.04166667,-0,0,0,0,0,0,0,0,0,0,-0,-0.04166667,0,0,0.08333333,-0,-0,-0.04166667,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-1.5820312,0,-0,0,4.7460938,-0,0,0,2.6367188,0,-0,0,-0,0,-0,-7.9101562,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    -0,-0,-0,0.04166667,-0.08333333,0.04166667,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0.04166667,0,-0,0.08333333,0,-0,-0.04166667,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-1.5820312,0,-0,0,4.7460938,-0,0,2.6367188,-0,0,-0,-0,0,-0,-7.9101562,0,-0,0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10825318,-0,-0,0,0,0,-0.10825318,-0,0,0,0,0,-0,0,0,0,0,-0,0,-0,0.10825318,0,-0.10825318,0,-0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,6.328125,0,-0,0,-0,0,0,0,0,0,-0,-10.546875,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,-0,0.10825318,0,0,0,-0,-0,-0.10825318,0,0,0,0,0,0,0,0,0,0,0,-0.10825318,-0,-0,-0,0,-0,0.10825318,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,-0,-0,-0,-0,6.328125,0,0,-0,0,0,0,0,-0,-0,0,-10.546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0.02083333,-0,-0.02083333,-0,0,0,-0.02083333,-0,0.02083333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02083333,-0,0.02083333,-0,0,-0,0.02083333,0,-0.02083333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,-0,0,-0,-0,1.6875,-0,-0,0,-0,0,0,0,0,0,-0,0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0.10825318,0,-0.10825318,0,-0,-0,0,0,0,0,-0,0,0,0,0,-0,0.10825318,0,0,0,-0,-0,-0.10825318,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,0,0,6.328125,0,0,0,0,0,0,-0,0,-10.546875,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0.02083333,0,-0.02083333,0,0,-0,-0.02083333,-0,0.02083333,0,0,0,0,0,0,0,0,0,0.02083333,0,-0.02083333,0,0,-0,-0.02083333,0,0.02083333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,-0,-0,0,-0,0,1.6875,0,-0,0,-0,0,0,-0,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    -0,0,-0,0.10825318,-0,-0.10825318,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10825318,0,-0,0,0,0,-0.10825318,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,-0,-0,-0,0,0,6.328125,0,-0,0,-0,0,0,0,-0,0,-10.546875,0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0.04166667,0,-0,0.08333333,0,0,-0.04166667,-0,0,0,0,0,-0,0,0,0,0,0,0,-0,0.04166667,-0.08333333,0.04166667,-0,-0,0,0,0,0,0,0,0,0,0,0,-1.5820312,-0,-0,-0,-0,0,4.7460938,0,2.6367188,0,0,0,0,0,-0,0,-7.9101562,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,-0,-0,0,0,-0.1875,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,-0,-0,-0,0,0.1875,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0.94921875,0,-0,0,1.5820312,-0,0,0,1.5820312,0,-0,0,-0,0,-0,-2.6367188,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    -0,0.04166667,-0,0,-0.08333333,0,0,0.04166667,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,-0.04166667,0.08333333,-0.04166667,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-1.5820312,0,-0,0,2.6367188,-0,0,4.7460938,-0,0,-0,0,0,-0,-7.9101562,0,-0,0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02083333,-0,0.02083333,-0,0,-0,0.02083333,-0,-0.02083333,0,0,0,0,-0,0,0,0,0,0.02083333,0,-0.02083333,0,-0,0,-0.02083333,0,0.02083333,0,0,0,0,0,0,0,0,0,-0,-0,-0,0,0,0,0,1.6875,0,0,0,0,-0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,-0,0,-0,0.10825318,-0,-0.10825318,0,0,-0,0,0,0,0,0,0,0,0,0,-0,-0,0,0.10825318,0,-0.10825318,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,-0,-0,0,0,0,0,6.328125,0,0,-0,-0,0,0,-10.546875,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    -0,0.10825318,-0,0,-0,0,-0,-0.10825318,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0.10825318,0,-0.10825318,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,-0,-0,0,0,0,0,0,6.328125,0,-0,0,0,-0,-0,-10.546875,-0,0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,-0.04166667,0.08333333,-0.04166667,0,0,-0,0,0,0,0,-0,0,0,0,0,0,0.04166667,-0,-0,-0.08333333,0,-0,0.04166667,0,0,0,0,0,0,0,0,0,0,-1.5820312,-0,-0,-0,-0,0,2.6367188,0,4.7460938,0,0,0,0,0,-0,0,-7.9101562,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,-0,0,0,0.04166667,-0.08333333,0.04166667,-0,0,-0,0,0,0,0,0,0,0,0,0,-0,0,0,-0.04166667,0.08333333,-0.04166667,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-1.5820312,0,-0,0,2.6367188,0,0,0,4.7460938,0,-0,0,-0,0,-0,-7.9101562,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    -0,-0,-0,0,-0.1875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,-0,0.1875,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0.94921875,0,-0,0,1.5820312,-0,0,1.5820312,-0,0,-0,-0,0,-0,-2.6367188,0,-0,0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0.3125,-0,0,-0,-0,0,0,0,0,-0,0,0,0,0,-0,-0,0,0,0.3125,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,-4.7460938,-0,0,0,0,-0,0,-0,7.9101562,0,7.9101562,-0,0,-0,-0,0,-13.183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,-0,0,0.3125,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,0.3125,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,0,-4.7460938,-0,0,-0,0,0,0,7.9101562,0,-0,-0,7.9101562,-0,-0,0,-13.183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,-0,0.3125,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,-0,0.3125,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,-0,-4.7460938,-0,0,-0,-0,-0,0,7.9101562,-0,0,7.9101562,0,0,-0,-13.183594,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10825318,-0,-0,0,0,0,0.10825318,-0,0,0,0,0,-0,0,0,0,0,-0,0,-0,0.10825318,-0,-0.10825318,0,-0,0,0,0,0,0,0,0,0,0,0,-0,-0,-1.265625,-0,0,0,0,0,0,0,0,0,0,2.109375,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,-0.125,-0,0,0.25,-0,-0,-0.125,0,0,0,0,0,0,0,0,0,0,0,-0.125,-0,-0,0.25,0,-0,-0.125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,0,-7.9101562,-0,0,-0,0,0,0,23.730469,-0,-0,-0,13.183594,-0,-0,0,-39.550781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    -0.02405626,0.04811252,-0.02405626,0,-0,-0,0.02405626,-0.04811252,0.02405626,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02405626,0,-0.02405626,-0.04811252,-0,0.04811252,0.02405626,-0,-0.02405626,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,0,-2.109375,0,0,-0,0,0,0,6.328125,-0,-0,-0,-0,-0,-0,-0,0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,-0.10825318,0,0.10825318,-0,0,-0,0,0,0,0,-0,0,0,0,0,-0,0.10825318,0,0,0,-0,-0,-0.10825318,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-1.265625,0,-0,-0,0,-0,-0,-0,0,2.109375,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,-0.02405626,0,0.02405626,0.04811252,0,-0.04811252,-0.02405626,-0,0.02405626,0,0,0,0,0,0,0,0,0,0.02405626,0,-0.02405626,-0.04811252,0,0.04811252,0.02405626,0,-0.02405626,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,-0,-2.109375,-0,0,0,0,-0,0,6.328125,-0,-0,0,-0,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,-0.125,0.25,-0.125,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0.125,0,-0,0.25,0,-0,-0.125,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,-0,-7.9101562,-0,0,-0,-0,-0,-0,23.730469,-0,0,13.183594,0,0,-0,-39.550781,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0.125,0,0,0.25,-0,0,-0.125,-0,0,0,0,0,-0,0,0,0,0,-0,-0,0,-0.125,0.25,-0.125,-0,0,-0,0,0,0,0,0,0,0,0,0,0,-7.9101562,-0,0,0,0,-0,0,-0,23.730469,0,13.183594,-0,0,-0,-0,0,-39.550781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,0.10825318,-0,0,-0,-0,-0,-0.10825318,0,0,0,0,0,0,0,0,0,0,0,0.10825318,0,0,-0,-0,-0,-0.10825318,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,-1.265625,0,0,-0,0,0,0,-0,-0,-0,-0,2.109375,-0,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    -0.02405626,0,0.02405626,0.04811252,-0,-0.04811252,-0.02405626,-0,0.02405626,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02405626,-0.04811252,0.02405626,0,-0,-0,-0.02405626,0.04811252,-0.02405626,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,-2.109375,-0,-0,0,0,0,0,0,0,0,6.328125,-0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0625,-0,0.0625,0,-0,0,0.0625,-0,-0.0625,0,0,0,0,-0,0,0,0,0,-0.0625,0,0.0625,0,-0,0,0.0625,0,-0.0625,0,0,0,0,0,0,0,0,0,-0,0,-0,-0,0,0,0,0,0,-0,8.4375,-0,0,0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,-0.0625,0,0.0625,0,-0,-0,0.0625,-0,-0.0625,0,0,0,0,0,0,0,0,0,0.0625,-0,-0.0625,-0,0,-0,-0.0625,0,0.0625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,0,-0,-0,0,0,0,-0,0,0,0,8.4375,-0,0,0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    -0.0625,0,0.0625,-0,-0,-0,0.0625,0,-0.0625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.0625,-0,0.0625,-0,0,-0,0.0625,-0,-0.0625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,0,-0,-0,0,0,0,0,-0,0,0,-0,8.4375,0,-0,0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,-0.125,0.25,-0.125,0,-0,-0,0,0,0,0,-0,0,0,0,0,0,-0.125,0,0,0.25,-0,-0,-0.125,-0,0,0,0,0,0,0,0,0,0,0,-7.9101562,-0,0,0,0,-0,0,-0,13.183594,0,23.730469,-0,0,-0,-0,0,-39.550781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,-0.02405626,0.04811252,-0.02405626,0,-0,-0,0.02405626,-0.04811252,0.02405626,0,0,0,0,0,0,0,0,0,-0.02405626,0.04811252,-0.02405626,0,-0,-0,0.02405626,-0.04811252,0.02405626,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,-2.109375,0,0,-0,0,0,0,-0,-0,-0,-0,6.328125,-0,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    -0,0,-0,0.10825318,0,-0.10825318,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0.10825318,0,0,0,-0,0,0.10825318,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,-1.265625,-0,-0,0,0,0,0,0,0,0,2.109375,-0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02405626,-0,-0.02405626,-0.04811252,-0,0.04811252,0.02405626,0,-0.02405626,0,0,0,0,-0,0,0,0,0,-0.02405626,0.04811252,-0.02405626,0,-0,-0,0.02405626,-0.04811252,0.02405626,0,0,0,0,0,0,0,0,0,0,0,-0,-2.109375,0,-0,-0,0,-0,-0,-0,-0,6.328125,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,-0,0,-0,0.10825318,0,-0.10825318,-0,-0,-0,0,0,0,0,0,0,0,0,0,-0,0,-0,-0.10825318,0,0.10825318,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,-0,-1.265625,-0,0,0,0,-0,0,2.109375,0,-0,0,-0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,-0.125,0,-0,0.25,-0,-0,-0.125,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,-0.125,0.25,-0.125,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,-0,-7.9101562,-0,0,-0,-0,-0,0,13.183594,-0,0,23.730469,0,0,-0,-39.550781,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02405626,-0.04811252,0.02405626,-0,0,0,-0.02405626,0.04811252,-0.02405626,0,0,0,0,-0,0,0,0,0,-0.02405626,0,0.02405626,0.04811252,-0,-0.04811252,-0.02405626,-0,0.02405626,0,0,0,0,0,0,0,0,0,-0,-0,-2.109375,-0,0,0,0,0,0,0,-0,0,0,6.328125,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,-0,-0.125,0.25,-0.125,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,-0,-0.125,0.25,-0.125,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,-0,-7.9101562,-0,0,-0,0,0,0,13.183594,0,-0,0,23.730469,-0,-0,0,-39.550781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    -0,0.10825318,0,0,-0,-0,-0,-0.10825318,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,-0,-0.10825318,-0,0.10825318,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,0,-1.265625,0,0,-0,0,0,0,2.109375,-0,-0,-0,-0,-0,-0,-0,0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0.18042196,0,0,-0,-0,-0,0.18042196,0,0,0,0,0,-0,0,0,0,0,0,-0,0,-0.18042196,-0,0.18042196,-0,0,-0,0,0,0,0,0,0,0,0,0,-0,0,0,0,-6.328125,-0,0,-0,0,-0,-0,-0,-0,-0,0,10.546875,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,-0.18042196,-0,-0,-0,0,0,0.18042196,-0,0,0,0,0,0,0,0,0,0,-0,0.18042196,0,0,0,-0,0,-0.18042196,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,0,0,0,0,-6.328125,-0,-0,0,-0,-0,-0,-0,0,0,-0,10.546875,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,
    0,-0,0,-0.18042196,0,0.18042196,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0.18042196,-0,0,-0,-0,-0,0.18042196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,0,0,0,0,-0,-0,-6.328125,-0,0,-0,0,-0,-0,-0,0,-0,10.546875,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0.18042196,-0,0.18042196,-0,0,0,0,0,0,0,-0,0,0,0,0,0,-0.18042196,-0,-0,-0,0,0,0.18042196,-0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-6.328125,-0,-0,-0,-0,-0,-0,0,-0,10.546875,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,-0,0,-0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,-0,0,-0.18042196,0,0.18042196,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0.18042196,-0,0.18042196,0,0,-0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,0,-0,-0,-0,-0,-0,0,0,0,-0,-0,-0,-0,-6.328125,-0,-0,0,0,-0,-0,10.546875,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,-0,0,-0,-0,-0,-0,-0,
    0,-0.18042196,0,-0,0,-0,0,0.18042196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,-0,-0.18042196,-0,0.18042196,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,0,0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,-0,-0,0,-0,0,-0,-0,-0,-0,-0,0,0,0,-0,-0,-0,-0,-0,-6.328125,-0,0,-0,-0,0,0,10.546875,0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.125,-0,0,-0.25,-0,-0,0.125,0,0,0,0,0,-0,0,0,0,0,-0,-0,0,-0.125,0.25,-0.125,0,0,-0,0,0,0,0,0,0,0,0,0,1.5820312,0,0,0,0,-0,-4.7460938,-0,-2.6367188,-0,-0,-0,-0,-0,0,-0,7.9101562,0,0,0,0,0,0,0,0,0,-0,-0,0,-0,0,-0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,0,-0,0,-0,-0,-0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0,-0.125,-0,-0,0.25,0,0,-0.125,0,0,0,0,0,0,0,0,0,0,0,0.125,-0,-0,-0.25,0,0,0.125,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,0,0,-0,-0,-0,-0,1.5820312,-0,0,-0,-4.7460938,0,-0,-0,-2.6367188,-0,0,-0,0,-0,0,7.9101562,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,-0,
    0.02777778,-0.05555556,0.02777778,-0.05555556,0.11111111,-0.05555556,0.02777778,-0.05555556,0.02777778,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,-0.02777778,0.05555556,-0.02777778,0.05555556,-0.11111111,0.05555556,-0.02777778,0.05555556,-0.02777778,0,0,0,0,0,0,0,0,0,-0,-0,0,0,-0,-0,-0,-0,-0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,2.6367188,-0,0,-0,-7.9101562,0,-0,-7.9101562,0,-0,0,-0,-0,0,23.730469,-0,0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0625,0,-0.0625,0,-0,0,-0.0625,0,0.0625,0,0,0,0,-0,0,0,0,0,-0.0625,-0,0.0625,-0,0,-0,0.0625,-0,-0.0625,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-1.6875,-0,-0,-0,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,-0,0,-0,-0,-0,-0,-0,0,0,0,0,0,0,0,-0,0,0,-0,0,-0,-0,-0,-0,-0,-0,
    0,0,0,0,-0,0,0,0,0,0.07216878,-0,-0.07216878,-0.14433757,0,0.14433757,0.07216878,-0,-0.07216878,0,0,0,0,0,0,0,0,0,0.07216878,0,-0.07216878,-0.14433757,-0,0.14433757,0.07216878,0,-0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-10.546875,-0,0,0,0,-0,0,31.640625,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0.07216878,-0.14433757,0.07216878,-0,0,-0,-0.07216878,0.14433757,-0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07216878,0,-0.07216878,-0.14433757,-0,0.14433757,0.07216878,0,-0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-0,-0,-10.546875,-0,0,-0,-0,0,0,31.640625,0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0.125,-0.25,0.125,-0,-0,0,0,0,0,0,-0,0,0,0,0,-0,-0.125,0,0,0.25,-0,0,-0.125,-0,0,0,0,0,0,0,0,0,0,1.5820312,0,0,0,0,-0,-2.6367188,-0,-4.7460938,-0,-0,-0,-0,-0,0,-0,7.9101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,-0,0,0,0,0,0.02777778,-0.05555556,0.02777778,-0.05555556,0.11111111,-0.05555556,0.02777778,-0.05555556,0.02777778,0,0,0,0,0,0,0,0,0,-0.02777778,0.05555556,-0.02777778,0.05555556,-0.11111111,0.05555556,-0.02777778,0.05555556,-0.02777778,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2.6367188,-0,0,-0,-7.9101562,0,-0,-0,-7.9101562,-0,0,-0,0,-0,0,23.730469,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,-0.125,0.25,-0.125,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.125,-0,0,-0.25,-0,0,0.125,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.5820312,-0,0,-0,-4.7460938,0,-0,-2.6367188,0,-0,0,0,-0,0,7.9101562,-0,0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07216878,-0,-0.07216878,-0.14433757,-0,0.14433757,0.07216878,0,-0.07216878,0,0,0,0,-0,0,0,0,0,0.07216878,-0.14433757,0.07216878,-0,-0,0,-0.07216878,0.14433757,-0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-10.546875,-0,-0,-0,-0,-0,-0,0,-0,31.640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,-0,0,0,0,0,-0.0625,-0,0.0625,-0,-0,0,0.0625,0,-0.0625,0,0,0,0,0,0,0,0,0,-0.0625,-0,0.0625,-0,-0,0,0.0625,-0,-0.0625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,-0,0,-0,-1.6875,-0,0,-0,0,-0,-0,0,0,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0.07216878,-0,-0.07216878,-0.14433757,0,0.14433757,0.07216878,0,-0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07216878,-0.14433757,0.07216878,0,-0,-0,-0.07216878,0.14433757,-0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,-10.546875,-0,0,-0,0,-0,-0,0,0,-0,31.640625,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07216878,-0.14433757,0.07216878,0,-0,-0,-0.07216878,0.14433757,-0.07216878,0,0,0,0,-0,0,0,0,0,0.07216878,-0,-0.07216878,-0.14433757,-0,0.14433757,0.07216878,0,-0.07216878,0,0,0,0,0,0,0,0,0,-0,0,0,0,-10.546875,-0,0,-0,0,-0,-0,-0,-0,-0,0,31.640625,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,-0,0,0,0,0,0.07216878,-0.14433757,0.07216878,-0,-0,0,-0.07216878,0.14433757,-0.07216878,0,0,0,0,0,0,0,0,0,-0.07216878,0.14433757,-0.07216878,0,0,-0,0.07216878,-0.14433757,0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,-10.546875,-0,-0,0,0,-0,-0,-0,0,0,-0,31.640625,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    -0.0625,0,0.0625,0,-0,-0,0.0625,0,-0.0625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0625,0,-0.0625,0,-0,0,-0.0625,-0,0.0625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,-0,0,-0,0,0,-1.6875,0,0,-0,0,-0,-0,-0,-0,-0,0,-0,0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02777778,0.05555556,-0.02777778,0.05555556,-0.11111111,0.05555556,-0.02777778,0.05555556,-0.02777778,0,0,0,0,-0,0,0,0,0,0.02777778,-0.05555556,0.02777778,-0.05555556,0.11111111,-0.05555556,0.02777778,-0.05555556,0.02777778,0,0,0,0,0,0,0,0,0,2.6367188,0,0,0,0,-0,-7.9101562,-0,-7.9101562,-0,-0,-0,-0,-0,0,-0,23.730469,0,0,0,0,0,0,0,0,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,-0,0,0,0,0,0,-0,-0,-0.125,0.25,-0.125,0,-0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0.125,-0.25,0.125,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,1.5820312,-0,0,-0,-2.6367188,-0,-0,-0,-4.7460938,-0,0,-0,0,-0,0,7.9101562,-0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,
    0,-0.125,0,-0,0.25,-0,-0,-0.125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0.125,-0.25,0.125,0,-0,-0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,1.5820312,-0,0,-0,-2.6367188,0,-0,-4.7460938,0,-0,0,-0,-0,0,7.9101562,-0,0,-0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.20833333,-0,-0,-0.41666667,0,-0,0.20833333,0,0,0,0,0,-0,0,0,0,0,0,0,-0,0.20833333,-0.41666667,0.20833333,0,-0,0,0,0,0,0,0,0,0,0,0,-0,7.9101562,0,-0,-0,-0,0,-0,0,-23.730469,-0,-13.183594,0,-0,0,0,-0,39.550781,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,
    0,0,0,0,-0,0,0,0,0,-0,0.20833333,0,-0,-0.41666667,0,0,0.20833333,-0,0,0,0,0,0,0,0,0,0,-0,0.20833333,0,0,-0.41666667,-0,0,0.20833333,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,-0,7.9101562,0,-0,0,-0,-0,-0,-23.730469,0,0,0,-13.183594,0,0,-0,39.550781,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,
    -0,-0,-0,0.20833333,-0.41666667,0.20833333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.20833333,-0,0,-0.41666667,-0,0,0.20833333,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,-0,-0,0,7.9101562,0,-0,0,0,0,0,-23.730469,0,-0,-13.183594,-0,-0,0,39.550781,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10416667,0,-0.10416667,-0,0,-0,-0.10416667,0,0.10416667,0,0,0,0,-0,0,0,0,0,0.10416667,-0,-0.10416667,-0,0,-0,-0.10416667,-0,0.10416667,0,0,0,0,0,0,0,0,0,0,-0,0,0,-0,-0,-0,-0,-0,0,-8.4375,0,-0,-0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,
    0,0,0,0,-0,0,0,0,0,0.10416667,-0,-0.10416667,-0,0,0,-0.10416667,0,0.10416667,0,0,0,0,0,0,0,0,0,-0.10416667,0,0.10416667,0,-0,0,0.10416667,-0,-0.10416667,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,-0,0,0,-0,-0,-0,0,-0,-0,-0,-8.4375,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,
    0.10416667,-0,-0.10416667,0,0,0,-0.10416667,-0,0.10416667,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10416667,0,-0.10416667,0,-0,0,-0.10416667,0,0.10416667,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,-0,0,0,-0,-0,-0,-0,0,-0,-0,0,-8.4375,-0,0,-0,0,0,
    0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0.20833333,-0.41666667,0.20833333,-0,0,0,0,0,0,0,-0,0,0,0,0,-0,0.20833333,-0,-0,-0.41666667,0,0,0.20833333,0,0,0,0,0,0,0,0,0,0,-0,7.9101562,0,-0,-0,-0,0,-0,0,-13.183594,-0,-23.730469,0,-0,0,0,-0,39.550781,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,
    0,0,0,0,-0,0,0,0,0,-0,-0,0,0.20833333,-0.41666667,0.20833333,-0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,0.20833333,-0.41666667,0.20833333,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,0,0,0,0,0,7.9101562,0,-0,0,-0,-0,-0,-13.183594,-0,0,-0,-23.730469,0,0,-0,39.550781,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,
    -0,0.20833333,-0,0,-0.41666667,0,0,0.20833333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0.20833333,-0.41666667,0.20833333,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,-0,-0,0,7.9101562,0,-0,0,0,0,-0,-13.183594,0,-0,-23.730469,-0,-0,0,39.550781,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07216878,0,0.07216878,0.14433757,0,-0.14433757,-0.07216878,-0,0.07216878,0,0,0,0,-0,0,0,0,0,0.07216878,-0.14433757,0.07216878,-0,0,0,-0.07216878,0.14433757,-0.07216878,0,0,0,0,0,0,0,0,0,-0,-0,0,2.109375,-0,0,0,-0,0,0,0,0,-6.328125,-0,-0,0,-0,-0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0.07216878,-0,-0.07216878,-0.14433757,-0,0.14433757,0.07216878,0,-0.07216878,0,0,0,0,0,0,0,0,0,-0.07216878,-0,0.07216878,0.14433757,-0,-0.14433757,-0.07216878,-0,0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,2.109375,0,-0,-0,-0,0,-0,-6.328125,0,0,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    -0.08333333,0.16666667,-0.08333333,0.16666667,-0.33333333,0.16666667,-0.08333333,0.16666667,-0.08333333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.08333333,0.16666667,-0.08333333,0.16666667,-0.33333333,0.16666667,-0.08333333,0.16666667,-0.08333333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,13.183594,0,-0,0,0,0,-0,-39.550781,0,-0,-39.550781,-0,-0,0,118.65234,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07216878,0.14433757,-0.07216878,0,-0,-0,0.07216878,-0.14433757,0.07216878,0,0,0,0,0,0,0,0,0,0.07216878,-0,-0.07216878,-0.14433757,0,0.14433757,0.07216878,0,-0.07216878,0,0,0,0,0,0,0,0,0,0,0,2.109375,0,-0,-0,-0,-0,-0,-0,0,-0,-0,-6.328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,-0.08333333,0.16666667,-0.08333333,0.16666667,-0.33333333,0.16666667,-0.08333333,0.16666667,-0.08333333,0,0,0,0,0,0,0,0,0,-0.08333333,0.16666667,-0.08333333,0.16666667,-0.33333333,0.16666667,-0.08333333,0.16666667,-0.08333333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13.183594,0,-0,0,-0,-0,-0,-39.550781,0,-0,0,-39.550781,0,0,-0,118.65234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    0.07216878,-0.14433757,0.07216878,-0,0,0,-0.07216878,0.14433757,-0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,-0.07216878,-0,0.07216878,0.14433757,0,-0.14433757,-0.07216878,0,0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,-0,2.109375,-0,-0,0,-0,-0,-0,-6.328125,0,0,0,0,0,0,0,-0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.08333333,0.16666667,-0.08333333,0.16666667,-0.33333333,0.16666667,-0.08333333,0.16666667,-0.08333333,0,0,0,0,0,0,0,0,0,-0.08333333,0.16666667,-0.08333333,0.16666667,-0.33333333,0.16666667,-0.08333333,0.16666667,-0.08333333,0,0,0,0,0,0,0,0,0,-0,13.183594,0,-0,-0,-0,0,-0,0,-39.550781,-0,-39.550781,0,-0,0,0,-0,118.65234,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0.07216878,-0.14433757,0.07216878,-0,0,0,-0.07216878,0.14433757,-0.07216878,0,0,0,0,0,0,0,0,0,0.07216878,-0.14433757,0.07216878,-0,0,0,-0.07216878,0.14433757,-0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,-0,2.109375,-0,-0,0,-0,-0,-0,0,0,0,0,-6.328125,0,0,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,
    0.07216878,-0,-0.07216878,-0.14433757,0,0.14433757,0.07216878,0,-0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07216878,0.14433757,-0.07216878,-0,0,0,0.07216878,-0.14433757,0.07216878,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,2.109375,0,0,-0,-0,-0,-0,-0,-0,-0,-6.328125,0,-0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.12028131,0,0.12028131,0.24056261,0,-0.24056261,-0.12028131,-0,0.12028131,0,0,0,0,0,0,0,0,0,-0.12028131,0.24056261,-0.12028131,0,0,-0,0.12028131,-0.24056261,0.12028131,0,0,0,0,0,0,0,0,0,-0,-0,-0,0,0,10.546875,0,0,0,0,0,0,-0,0,-31.640625,-0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,
    0,0,0,0,0,0,0,0,0,-0.12028131,0,0.12028131,0.24056261,-0,-0.24056261,-0.12028131,0,0.12028131,0,0,0,0,0,0,0,0,0,-0.12028131,-0,0.12028131,0.24056261,0,-0.24056261,-0.12028131,-0,0.12028131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,-0,-0,-0,0,0,0,0,10.546875,0,-0,-0,-0,0,-0,-31.640625,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,
    -0.12028131,0.24056261,-0.12028131,0,-0,0,0.12028131,-0.24056261,0.12028131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.12028131,-0,0.12028131,0.24056261,0,-0.24056261,-0.12028131,-0,0.12028131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,-0,-0,-0,0,0,0,0,0,10.546875,0,-0,0,0,-0,-0,-31.640625,-0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.12028131,0.24056261,-0.12028131,-0,0,0,0.12028131,-0.24056261,0.12028131,0,0,0,0,0,0,0,0,0,-0.12028131,0,0.12028131,0.24056261,0,-0.24056261,-0.12028131,-0,0.12028131,0,0,0,0,0,0,0,0,0,0,-0,-0,-0,10.546875,0,-0,0,-0,0,0,0,0,0,-0,-31.640625,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,
    0,0,0,0,0,0,0,0,0,-0.12028131,0.24056261,-0.12028131,0,0,-0,0.12028131,-0.24056261,0.12028131,0,0,0,0,0,0,0,0,0,0.12028131,-0.24056261,0.12028131,-0,-0,0,-0.12028131,0.24056261,-0.12028131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,-0,-0,-0,-0,10.546875,0,0,-0,-0,0,0,0,-0,-0,0,-31.640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,
    -0.12028131,0,0.12028131,0.24056261,-0,-0.24056261,-0.12028131,-0,0.12028131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.12028131,0.24056261,-0.12028131,-0,0,0,0.12028131,-0.24056261,0.12028131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,-0,-0,-0,-0,0,0,0,10.546875,0,-0,0,-0,0,0,0,-0,0,-31.640625,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.08333333,-0.16666667,0.08333333,-0.16666667,0.33333333,-0.16666667,0.08333333,-0.16666667,0.08333333,0,0,0,0,0,0,0,0,0,-0.08333333,0.16666667,-0.08333333,0.16666667,-0.33333333,0.16666667,-0.08333333,0.16666667,-0.08333333,0,0,0,0,0,0,0,0,0,-2.6367188,-0,-0,-0,-0,0,7.9101562,0,7.9101562,0,0,0,0,0,-0,0,-23.730469,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,
    0,0,0,0,0,0,0,0,0,-0.08333333,0.16666667,-0.08333333,0.16666667,-0.33333333,0.16666667,-0.08333333,0.16666667,-0.08333333,0,0,0,0,0,0,0,0,0,0.08333333,-0.16666667,0.08333333,-0.16666667,0.33333333,-0.16666667,0.08333333,-0.16666667,0.08333333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-2.6367188,0,-0,0,7.9101562,-0,0,0,7.9101562,0,-0,0,-0,0,-0,-23.730469,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,
    -0.08333333,0.16666667,-0.08333333,0.16666667,-0.33333333,0.16666667,-0.08333333,0.16666667,-0.08333333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.08333333,-0.16666667,0.08333333,-0.16666667,0.33333333,-0.16666667,0.08333333,-0.16666667,0.08333333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-2.6367188,0,-0,0,7.9101562,-0,0,7.9101562,-0,0,-0,0,0,-0,-23.730469,0,-0,0,
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.13888889,-0.27777778,0.13888889,-0.27777778,0.55555556,-0.27777778,0.13888889,-0.27777778,0.13888889,0,0,0,0,0,0,0,0,0,0.13888889,-0.27777778,0.13888889,-0.27777778,0.55555556,-0.27777778,0.13888889,-0.27777778,0.13888889,0,0,0,0,0,0,0,0,0,0,-13.183594,-0,0,0,0,-0,0,-0,39.550781,0,39.550781,-0,0,-0,-0,0,-118.65234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,
    0,0,0,0,0,0,0,0,0,0.13888889,-0.27777778,0.13888889,-0.27777778,0.55555556,-0.27777778,0.13888889,-0.27777778,0.13888889,0,0,0,0,0,0,0,0,0,0.13888889,-0.27777778,0.13888889,-0.27777778,0.55555556,-0.27777778,0.13888889,-0.27777778,0.13888889,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-0,-13.183594,-0,0,-0,0,0,0,39.550781,-0,0,-0,39.550781,-0,-0,0,-118.65234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,
    0.13888889,-0.27777778,0.13888889,-0.27777778,0.55555556,-0.27777778,0.13888889,-0.27777778,0.13888889,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.13888889,-0.27777778,0.13888889,-0.27777778,0.55555556,-0.27777778,0.13888889,-0.27777778,0.13888889,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,-13.183594,-0,0,-0,-0,-0,0,39.550781,-0,0,39.550781,0,0,-0,-118.65234
};

static void N_H_RT2_3D_Funct(double xi, double eta, double zeta,
							 double *values)
{
  //space: Q_{3,2,2}xQ_{2,3,2}xQ_{2,2,3}
  int nBF = 108; // number of basis functions
  // monomials x-component, y-component and z-component
  double mon_x[]={
  //const + 1st degree polynomials
  1,0,0,xi,0,0,eta,0,0,zeta,0,0,
  //2nd degree polynomials
  xi*xi,0,0,xi*eta,0,0,xi*zeta,0,0,eta*eta,0,0,eta*zeta,0,0,zeta*zeta,0,0,
  //3rd degree polynomials
  xi*xi*xi,0,0,xi*xi*eta,0,0,xi*xi*zeta,0,0,
  xi*eta*eta,0,0,xi*eta*zeta,0,0,xi*zeta*zeta,0,0,
  eta*eta*zeta,0,0,eta*zeta*zeta,0,0,
  //4th degree polynomials
  xi*xi*xi*eta,0,0,xi*xi*xi*zeta,0,0,
  xi*xi*eta*eta,0,0,xi*xi*eta*zeta,0,0,xi*xi*zeta*zeta,0,0,
  xi*eta*eta*zeta,0,0,xi*eta*zeta*zeta,0,0,
  eta*eta*zeta*zeta,0,0,
  //5th degree polynomials
  xi*xi*xi*eta*eta,0,0,xi*xi*xi*eta*zeta,0,0,xi*xi*xi*zeta*zeta,0,0,
  xi*xi*eta*eta*zeta,0,0,xi*xi*eta*zeta*zeta,0,0,
  xi*eta*eta*zeta*zeta,0,0,
  //6th degree polynomials
  xi*xi*xi*eta*eta*zeta,0,0,xi*xi*xi*eta*zeta*zeta,0,0,
  xi*xi*eta*eta*zeta*zeta,0,0,
  //7t h degree polynomials
  xi*xi*xi*eta*eta*zeta*zeta,0,0};
  double mon_y[]={
  //const + 1st degree polynomials
  0,1,0,0,xi,0,0,eta,0,0,zeta,0,
  //2nd degree polynomials
  0,xi*xi,0,0,xi*eta,0,0,xi*zeta,0,0,eta*eta,0,0,eta*zeta,0,0,zeta*zeta,0,
  //3rd degree polynomials
  0,eta*eta*eta,0,0,xi*xi*eta,0,0,xi*xi*zeta,0,
  0,xi*eta*eta,0,0,xi*eta*zeta,0,0,xi*zeta*zeta,0,
  0,eta*eta*zeta,0,0,eta*zeta*zeta,0,
  //4th degree polynomials
  0,xi*eta*eta*eta,0,0,eta*eta*eta*zeta,0,
  0,xi*xi*eta*eta,0,0,xi*xi*eta*zeta,0,0,xi*xi*zeta*zeta,0,
  0,xi*eta*eta*zeta,0,0,xi*eta*zeta*zeta,0,
  0,eta*eta*zeta*zeta,0,
  //5th degree polynomials
  0,xi*xi*eta*eta*eta,0,0,xi*eta*eta*eta*zeta,0,0,eta*eta*eta*zeta*zeta,0,
  0,xi*xi*eta*eta*zeta,0,0,xi*xi*eta*zeta*zeta,0,
  0,xi*eta*eta*zeta*zeta,0,
  //6th degree polynomials
  0,xi*xi*eta*eta*eta*zeta,0,0,xi*eta*eta*eta*zeta*zeta,0,
  0,xi*xi*eta*eta*zeta*zeta,0,
  //7t h degree polynomials
  0,xi*xi*eta*eta*eta*zeta*zeta,0};
  double mon_z[]={
  //const + 1st degree polynomials
  0,0,1,0,0,xi,0,0,eta,0,0,zeta,
  //2nd degree polynomials
  0,0,xi*xi,0,0,xi*eta,0,0,xi*zeta,0,0,eta*eta,0,0,eta*zeta,0,0,zeta*zeta,
  //3rd degree polynomials
  0,0,zeta*zeta*zeta,0,0,xi*xi*eta,0,0,xi*xi*zeta,
  0,0,xi*eta*eta,0,0,xi*eta*zeta,0,0,xi*zeta*zeta,
  0,0,eta*eta*zeta,0,0,eta*zeta*zeta,
  //4th degree polynomials
  0,0,xi*zeta*zeta*zeta,0,0,eta*zeta*zeta*zeta,
  0,0,xi*xi*eta*eta,0,0,xi*xi*eta*zeta,0,0,xi*xi*zeta*zeta,
  0,0,xi*eta*eta*zeta,0,0,xi*eta*zeta*zeta,
  0,0,eta*eta*zeta*zeta,
  //5th degree polynomials
  0,0,xi*xi*zeta*zeta*zeta,0,0,xi*eta*zeta*zeta*zeta,0,0,eta*eta*zeta*zeta*zeta,
  0,0,xi*xi*eta*eta*zeta,0,0,xi*xi*eta*zeta*zeta,
  0,0,xi*eta*eta*zeta*zeta,
  //6th degree polynomials
  0,0,xi*xi*eta*zeta*zeta*zeta,0,0,xi*eta*eta*zeta*zeta*zeta,
  0,0,xi*xi*eta*eta*zeta*zeta,
  //7t h degree polynomials
  0,0,xi*xi*eta*eta*zeta*zeta*zeta};
  
  memset(values, 0.0, 3*nBF*SizeOfDouble); // 3 is the space dimension
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i      ] += N_H_RT2_3D_CM[i+j*nBF]*mon_x[j];
      values[i+  nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_y[j];
      values[i+2*nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_z[j];
    }
  }
}

static void N_H_RT2_3D_DeriveXi(double xi, double eta, double zeta,
                                double *values)
{
  int nBF = 108; // number of basis functions
  // monomials x-component, y-component and z-component
  double mon_x[]={
  //const + 1st degree polynomials
  0,0,0,1,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  2*xi,0,0,eta,0,0,zeta,0,0,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  3*xi*xi,0,0,2*xi*eta,0,0,2*xi*zeta,0,0,
  eta*eta,0,0,eta*zeta,0,0,zeta*zeta,0,0,
  0,0,0,0,0,0,
  //4th degree polynomials
  3*xi*xi*eta,0,0,3*xi*xi*zeta,0,0,
  2*xi*eta*eta,0,0,2*xi*eta*zeta,0,0,2*xi*zeta*zeta,0,0,
  eta*eta*zeta,0,0,eta*zeta*zeta,0,0,
  0,0,0,
  //5th degree polynomials
  3*xi*xi*eta*eta,0,0,3*xi*xi*eta*zeta,0,0,3*xi*xi*zeta*zeta,0,0,
  2*xi*eta*eta*zeta,0,0,2*xi*eta*zeta*zeta,0,0,
  eta*eta*zeta*zeta,0,0,
  //6th degree polynomials
  3*xi*xi*eta*eta*zeta,0,0,3*xi*xi*eta*zeta*zeta,0,0,
  2*xi*eta*eta*zeta*zeta,0,0,
  //7t h degree polynomials
  3*xi*xi*eta*eta*zeta*zeta,0,0};
  double mon_y[]={
  //const + 1st degree polynomials
  0,0,0,0,1,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,2*xi,0,0,eta,0,0,zeta,0,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,0,2*xi*eta,0,0,2*xi*zeta,0,
  0,eta*eta,0,0,eta*zeta,0,0,zeta*zeta,0,
  0,0,0,0,0,0,
  //4th degree polynomials
  0,eta*eta*eta,0,0,0,0,
  0,2*xi*eta*eta,0,0,2*xi*eta*zeta,0,0,2*xi*zeta*zeta,0,
  0,eta*eta*zeta,0,0,eta*zeta*zeta,0,
  0,0,0,
  //5th degree polynomials
  0,2*xi*eta*eta*eta,0,0,eta*eta*eta*zeta,0,0,0,0,
  0,2*xi*eta*eta*zeta,0,0,2*xi*eta*zeta*zeta,0,
  0,eta*eta*zeta*zeta,0,
  //6th degree polynomials
  0,2*xi*eta*eta*eta*zeta,0,0,eta*eta*eta*zeta*zeta,0,
  0,2*xi*eta*eta*zeta*zeta,0,
  //7t h degree polynomials
  0,2*xi*eta*eta*eta*zeta*zeta,0};
  double mon_z[]={
  //const + 1st degree polynomials
  0,0,0,0,0,1,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,2*xi,0,0,eta,0,0,zeta,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,0,0,2*xi*eta,0,0,2*xi*zeta,
  0,0,eta*eta,0,0,eta*zeta,0,0,zeta*zeta,
  0,0,0,0,0,0,
  //4th degree polynomials
  0,0,zeta*zeta*zeta,0,0,0,
  0,0,2*xi*eta*eta,0,0,2*xi*eta*zeta,0,0,2*xi*zeta*zeta,
  0,0,eta*eta*zeta,0,0,eta*zeta*zeta,
  0,0,0,
  //5th degree polynomials
  0,0,2*xi*zeta*zeta*zeta,0,0,eta*zeta*zeta*zeta,0,0,0,
  0,0,2*xi*eta*eta*zeta,0,0,2*xi*eta*zeta*zeta,
  0,0,eta*eta*zeta*zeta,
  //6th degree polynomials
  0,0,2*xi*eta*zeta*zeta*zeta,0,0,eta*eta*zeta*zeta*zeta,
  0,0,2*xi*eta*eta*zeta*zeta,
  //7t h degree polynomials
  0,0,2*xi*eta*eta*zeta*zeta*zeta};
  
  memset(values, 0.0, 3*nBF*SizeOfDouble); // 3 is the space dimension
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i      ] += N_H_RT2_3D_CM[i+j*nBF]*mon_x[j];
      values[i+  nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_y[j];
      values[i+2*nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_z[j];
    }
  }
}

static void N_H_RT2_3D_DeriveEta(double xi, double eta, double zeta,
                                 double *values)
{
  int nBF = 108; // number of basis functions
  // monomials x-component, y-component and z-component
  double mon_x[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,1,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,xi,0,0,0,0,0,2*eta,0,0,zeta,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,xi*xi,0,0,0,0,0,
  xi*2*eta,0,0,xi*zeta,0,0,0,0,0,
  2*eta*zeta,0,0,zeta*zeta,0,0,
  //4th degree polynomials
  xi*xi*xi,0,0,0,0,0,
  xi*xi*2*eta,0,0,xi*xi*zeta,0,0,0,0,0,
  xi*2*eta*zeta,0,0,xi*zeta*zeta,0,0,
  2*eta*zeta*zeta,0,0,
  //5th degree polynomials
  xi*xi*xi*2*eta,0,0,xi*xi*xi*zeta,0,0,0,0,0,
  xi*xi*2*eta*zeta,0,0,xi*xi*zeta*zeta,0,0,
  xi*2*eta*zeta*zeta,0,0,
  //6th degree polynomials
  xi*xi*xi*2*eta*zeta,0,0,xi*xi*xi*zeta*zeta,0,0,
  xi*xi*2*eta*zeta*zeta,0,0,
  //7t h degree polynomials
  xi*xi*xi*2*eta*zeta*zeta,0,0};
  double mon_y[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,1,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,xi,0,0,0,0,0,2*eta,0,0,zeta,0,0,0,0,
  //3rd degree polynomials
  0,3*eta*eta,0,0,xi*xi,0,0,0,0,
  0,xi*2*eta,0,0,xi*zeta,0,0,0,0,
  0,2*eta*zeta,0,0,zeta*zeta,0,
  //4th degree polynomials
  0,xi*3*eta*eta,0,0,3*eta*eta*zeta,0,
  0,xi*xi*2*eta,0,0,xi*xi*zeta,0,0,0,0,
  0,xi*2*eta*zeta,0,0,xi*zeta*zeta,0,
  0,2*eta*zeta*zeta,0,
  //5th degree polynomials
  0,xi*xi*3*eta*eta,0,0,xi*3*eta*eta*zeta,0,0,3*eta*eta*zeta*zeta,0,
  0,xi*xi*2*eta*zeta,0,0,xi*xi*zeta*zeta,0,
  0,xi*2*eta*zeta*zeta,0,
  //6th degree polynomials
  0,xi*xi*3*eta*eta*zeta,0,0,xi*3*eta*eta*zeta*zeta,0,
  0,xi*xi*2*eta*zeta*zeta,0,
  //7t h degree polynomials
  0,xi*xi*3*eta*eta*zeta*zeta,0};
  double mon_z[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,1,0,0,0,
  //2nd degree polynomials
  0,0,0,0,0,xi,0,0,0,0,0,2*eta,0,0,zeta,0,0,0,
  //3rd degree polynomials
  0,0,0,0,0,xi*xi,0,0,0,
  0,0,xi*2*eta,0,0,xi*zeta,0,0,0,
  0,0,2*eta*zeta,0,0,zeta*zeta,
  //4th degree polynomials
  0,0,0,0,0,zeta*zeta*zeta,
  0,0,xi*xi*2*eta,0,0,xi*xi*zeta,0,0,0,
  0,0,xi*2*eta*zeta,0,0,xi*zeta*zeta,
  0,0,2*eta*zeta*zeta,
  //5th degree polynomials
  0,0,0,0,0,xi*zeta*zeta*zeta,0,0,2*eta*zeta*zeta*zeta,
  0,0,xi*xi*2*eta*zeta,0,0,xi*xi*zeta*zeta,
  0,0,xi*2*eta*zeta*zeta,
  //6th degree polynomials
  0,0,xi*xi*zeta*zeta*zeta,0,0,xi*2*eta*zeta*zeta*zeta,
  0,0,xi*xi*2*eta*zeta*zeta,
  //7t h degree polynomials
  0,0,xi*xi*2*eta*zeta*zeta*zeta};
  
  memset(values, 0.0, 3*nBF*SizeOfDouble); // 3 is the space dimension
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i      ] += N_H_RT2_3D_CM[i+j*nBF]*mon_x[j];
      values[i+  nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_y[j];
      values[i+2*nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_z[j];
    }
  }
}

static void N_H_RT2_3D_DeriveZeta(double xi, double eta, double zeta,
                                  double *values)
{
	  int nBF = 108; // number of basis functions
	  // monomials x-component, y-component and z-component
	  double mon_x[]={
	  //const + 1st degree polynomials
	  0,0,0,0,0,0,0,0,0,1,0,0,
	  //2nd degree polynomials
	  0,0,0,0,0,0,xi,0,0,0,0,0,eta,0,0,2*zeta,0,0,
	  //3rd degree polynomials
	  0,0,0,0,0,0,xi*xi,0,0,
	  0,0,0,xi*eta,0,0,xi*2*zeta,0,0,
	  eta*eta,0,0,eta*2*zeta,0,0,
	  //4th degree polynomials
	  0,0,0,xi*xi*xi,0,0,
	  0,0,0,xi*xi*eta,0,0,xi*xi*2*zeta,0,0,
	  xi*eta*eta,0,0,xi*eta*2*zeta,0,0,
	  eta*eta*2*zeta,0,0,
	  //5th degree polynomials
	  0,0,0,xi*xi*xi*eta,0,0,xi*xi*xi*2*zeta,0,0,
	  xi*xi*eta*eta,0,0,xi*xi*eta*2*zeta,0,0,
	  xi*eta*eta*2*zeta,0,0,
	  //6th degree polynomials
	  xi*xi*xi*eta*eta,0,0,xi*xi*xi*eta*2*zeta,0,0,
	  xi*xi*eta*eta*2*zeta,0,0,
	  //7t h degree polynomials
	  xi*xi*xi*eta*eta*2*zeta,0,0};
	  double mon_y[]={
	  //const + 1st degree polynomials
	  0,0,0,0,0,0,0,0,0,0,1,0,
	  //2nd degree polynomials
	  0,0,0,0,0,0,0,xi,0,0,0,0,0,eta,0,0,2*zeta,0,
	  //3rd degree polynomials
	  0,0,0,0,0,0,0,xi*xi,0,
	  0,0,0,0,xi*eta,0,0,xi*2*zeta,0,
	  0,eta*eta,0,0,eta*2*zeta,0,
	  //4th degree polynomials
	  0,0,0,0,eta*eta*eta,0,
	  0,0,0,0,xi*xi*eta,0,0,xi*xi*2*zeta,0,
	  0,xi*eta*eta,0,0,xi*eta*2*zeta,0,
	  0,eta*eta*2*zeta,0,
	  //5th degree polynomials
	  0,0,0,0,xi*eta*eta*eta,0,0,eta*eta*eta*2*zeta,0,
	  0,xi*xi*eta*eta,0,0,xi*xi*eta*2*zeta,0,
	  0,xi*eta*eta*2*zeta,0,
	  //6th degree polynomials
	  0,xi*xi*eta*eta*eta,0,0,xi*eta*eta*eta*2*zeta,0,
	  0,xi*xi*eta*eta*2*zeta,0,
	  //7t h degree polynomials
	  0,xi*xi*eta*eta*eta*2*zeta,0};
	  double mon_z[]={
	  //const + 1st degree polynomials
	  0,0,0,0,0,0,0,0,0,0,0,1,
	  //2nd degree polynomials
	  0,0,0,0,0,0,0,0,xi,0,0,0,0,0,eta,0,0,2*zeta,
	  //3rd degree polynomials
	  0,0,3*zeta*zeta,0,0,0,0,0,xi*xi,
	  0,0,0,0,0,xi*eta,0,0,xi*2*zeta,
	  0,0,eta*eta,0,0,eta*2*zeta,
	  //4th degree polynomials
	  0,0,xi*3*zeta*zeta,0,0,eta*3*zeta*zeta,
	  0,0,0,0,0,xi*xi*eta,0,0,xi*xi*2*zeta,
	  0,0,xi*eta*eta,0,0,xi*eta*2*zeta,
	  0,0,eta*eta*2*zeta,
	  //5th degree polynomials
	  0,0,xi*xi*3*zeta*zeta,0,0,xi*eta*3*zeta*zeta,0,0,eta*eta*3*zeta*zeta,
	  0,0,xi*xi*eta*eta,0,0,xi*xi*eta*2*zeta,
	  0,0,xi*eta*eta*2*zeta,
	  //6th degree polynomials
	  0,0,xi*xi*eta*3*zeta*zeta,0,0,xi*eta*eta*3*zeta*zeta,
	  0,0,xi*xi*eta*eta*2*zeta,
	  //7t h degree polynomials
	  0,0,xi*xi*eta*eta*3*zeta*zeta};
  
  memset(values, 0.0, 3*nBF*SizeOfDouble); // 3 is the space dimension
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i      ] += N_H_RT2_3D_CM[i+j*nBF]*mon_x[j];
      values[i+  nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_y[j];
      values[i+2*nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_z[j];
    }
  }
}

static void N_H_RT2_3D_DeriveXiXi(double xi, double eta, double zeta,
                                  double *values)
{
  int nBF = 108; // number of basis functions
  // monomials x-component, y-component and z-component
  double mon_x[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  3*2*xi,0,0,2*eta,0,0,2*zeta,0,0,
  0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,
  //4th degree polynomials
  3*2*xi*eta,0,0,3*2*xi*zeta,0,0,
  2*eta*eta,0,0,2*eta*zeta,0,0,2*zeta*zeta,0,0,
  0,0,0,0,0,0,
  0,0,0,
  //5th degree polynomials
  3*2*xi*eta*eta,0,0,3*2*xi*eta*zeta,0,0,3*2*xi*zeta*zeta,0,0,
  2*eta*eta*zeta,0,0,2*eta*zeta*zeta,0,0,
  0,0,0,
  //6th degree polynomials
  3*2*xi*eta*eta*zeta,0,0,3*2*xi*eta*zeta*zeta,0,0,
  2*eta*eta*zeta*zeta,0,0,
  //7t h degree polynomials
  3*2*xi*eta*eta*zeta*zeta,0,0};
  double mon_y[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,0,2*eta,0,0,2*zeta,0,
  0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,
  //4th degree polynomials
  0,0,0,0,0,0,
  0,2*eta*eta,0,0,2*eta*zeta,0,0,2*zeta*zeta,0,
  0,0,0,0,0,0,
  0,0,0,
  //5th degree polynomials
  0,2*eta*eta*eta,0,0,0,0,0,0,0,
  0,2*eta*eta*zeta,0,0,2*eta*zeta*zeta,0,
  0,0,0,
  //6th degree polynomials
  0,2*eta*eta*eta*zeta,0,0,0,0,
  0,2*eta*eta*zeta*zeta,0,
  //7t h degree polynomials
  0,2*xi*eta*eta*eta*zeta*zeta,0};
  double mon_z[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,0,0,2*eta,0,0,2*zeta,
  0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,
  //4th degree polynomials
  0,0,0,0,0,0,
  0,0,2*eta*eta,0,0,2*eta*zeta,0,0,2*zeta*zeta,
  0,0,0,0,0,0,
  0,0,0,
  //5th degree polynomials
  0,0,2*zeta*zeta*zeta,0,0,0,0,0,0,
  0,0,2*eta*eta*zeta,0,0,2*eta*zeta*zeta,
  0,0,0,
  //6th degree polynomials
  0,0,2*zeta*zeta*zeta,0,0,0,
  0,0,2*eta*eta*zeta*zeta,
  //7t h degree polynomials
  0,0,2*eta*eta*zeta*zeta*zeta};

  memset(values, 0.0, 3*nBF*SizeOfDouble); // 3 is the space dimension
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i      ] += N_H_RT2_3D_CM[i+j*nBF]*mon_x[j];
      values[i+  nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_y[j];
      values[i+2*nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_z[j];
    }
  }
}

static void N_H_RT2_3D_DeriveXiEta(double xi, double eta, double zeta,
                                   double *values)
{
  int nBF = 108; // number of basis functions
  // monomials x-component, y-component and z-component
  double mon_x[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,2*xi,0,0,0,0,0,
  2*eta,0,0,zeta,0,0,0,0,0,
  0,0,0,0,0,0,
  //4th degree polynomials
  3*xi*xi,0,0,0,0,0,
  2*xi*2*eta,0,0,2*xi*zeta,0,0,0,0,0,
  2*eta*zeta,0,0,zeta*zeta,0,0,
  0,0,0,
  //5th degree polynomials
  3*xi*xi*2*eta,0,0,3*xi*xi*zeta,0,0,0,0,0,
  2*xi*2*eta*zeta,0,0,2*xi*zeta*zeta,0,0,
  2*eta*zeta*zeta,0,0,
  //6th degree polynomials
  3*xi*xi*2*eta*zeta,0,0,3*xi*xi*zeta*zeta,0,0,
  2*xi*2*eta*zeta*zeta,0,0,
  //7t h degree polynomials
  3*xi*xi*2*eta*zeta*zeta,0,0};
  double mon_y[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,0,2*xi,0,0,0,0,
  0,2*eta,0,0,zeta,0,0,0,0,
  0,0,0,0,0,0,
  //4th degree polynomials
  0,3*eta*eta,0,0,0,0,
  0,2*xi*2*eta,0,0,2*xi*zeta,0,0,0,0,
  0,2*eta*zeta,0,0,zeta*zeta,0,
  0,0,0,
  //5th degree polynomials
  0,2*xi*3*eta*eta,0,0,3*eta*eta*zeta,0,0,0,0,
  0,2*xi*2*eta*zeta,0,0,2*xi*zeta*zeta,0,
  0,2*eta*zeta*zeta,0,
  //6th degree polynomials
  0,2*xi*3*eta*eta*zeta,0,0,3*eta*eta*zeta*zeta,0,
  0,2*xi*2*eta*zeta*zeta,0,
  //7t h degree polynomials
  0,2*xi*3*eta*eta*zeta*zeta,0};
  double mon_z[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,0,0,2*xi,0,0,0,
  0,0,2*eta,0,0,zeta,0,0,0,
  0,0,0,0,0,0,
  //4th degree polynomials
  0,0,0,0,0,0,
  0,0,2*xi*2*eta,0,0,2*xi*zeta,0,0,0,
  0,0,2*eta*zeta,0,0,zeta*zeta,
  0,0,0,
  //5th degree polynomials
  0,0,0,0,0,zeta*zeta*zeta,0,0,0,
  0,0,2*xi*2*eta*zeta,0,0,2*xi*zeta*zeta,
  0,0,2*eta*zeta*zeta,
  //6th degree polynomials
  0,0,2*xi*zeta*zeta*zeta,0,0,2*eta*zeta*zeta*zeta,
  0,0,2*xi*2*eta*zeta*zeta,
  //7t h degree polynomials
  0,0,2*xi*2*eta*zeta*zeta*zeta};

  memset(values, 0.0, 3*nBF*SizeOfDouble); // 3 is the space dimension
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i      ] += N_H_RT2_3D_CM[i+j*nBF]*mon_x[j];
      values[i+  nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_y[j];
      values[i+2*nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_z[j];
    }
  }
}

static void N_H_RT2_3D_DeriveXiZeta(double xi, double eta, double zeta,
                                    double *values)
{
  int nBF = 108; // number of basis functions
  // monomials x-component, y-component and z-component
  double mon_x[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,0,0,0,2*xi,0,0,
  0,0,0,eta,0,0,2*zeta,0,0,
  0,0,0,0,0,0,
  //4th degree polynomials
  0,0,0,3*xi*xi,0,0,
  0,0,0,2*xi*eta,0,0,2*xi*2*zeta,0,0,
  eta*eta,0,0,eta*2*zeta,0,0,
  0,0,0,
  //5th degree polynomials
  0,0,0,3*xi*xi*eta,0,0,3*xi*xi*2*zeta,0,0,
  2*xi*eta*eta,0,0,2*xi*eta*2*zeta,0,0,
  eta*eta*2*zeta,0,0,
  //6th degree polynomials
  3*xi*xi*eta*eta,0,0,3*xi*xi*eta*2*zeta,0,0,
  2*xi*eta*eta*2*zeta,0,0,
  //7t h degree polynomials
  3*xi*xi*eta*eta*2*zeta,0,0};
  double mon_y[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,0,0,0,0,2*xi,0,
  0,0,0,0,eta,0,0,2*zeta,0,
  0,0,0,0,0,0,
  //4th degree polynomials
  0,0,0,0,0,0,
  0,0,0,0,2*xi*eta,0,0,2*xi*2*zeta,0,
  0,eta*eta,0,0,eta*2*zeta,0,
  0,0,0,
  //5th degree polynomials
  0,0,0,0,eta*eta*eta,0,0,0,0,
  0,2*xi*eta*eta,0,0,2*xi*eta*2*zeta,0,
  0,eta*eta*2*zeta,0,
  //6th degree polynomials
  0,2*xi*eta*eta*eta,0,0,eta*eta*eta*2*zeta,0,
  0,2*xi*eta*eta*2*zeta,0,
  //7t h degree polynomials
  0,2*xi*eta*eta*eta*2*zeta,0};
  double mon_z[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,0,0,0,0,0,2*xi,
  0,0,0,0,0,eta,0,0,2*zeta,
  0,0,0,0,0,0,
  //4th degree polynomials
  0,0,3*zeta*zeta,0,0,0,
  0,0,0,0,0,xi*eta,0,0,xi*2*zeta,
  0,0,eta*eta,0,0,eta*2*zeta,
  0,0,0,
  //5th degree polynomials
  0,0,2*xi*3*zeta*zeta,0,0,eta*3*zeta*zeta,0,0,0,
  0,0,2*xi*eta*eta,0,0,2*xi*eta*2*zeta,
  0,0,eta*eta*2*zeta,
  //6th degree polynomials
  0,0,2*xi*eta*3*zeta*zeta,0,0,eta*eta*3*zeta*zeta,
  0,0,2*xi*eta*eta*2*zeta,
  //7t h degree polynomials
  0,0,2*xi*eta*eta*3*zeta*zeta};

  memset(values, 0.0, 3*nBF*SizeOfDouble); // 3 is the space dimension
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i      ] += N_H_RT2_3D_CM[i+j*nBF]*mon_x[j];
      values[i+  nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_y[j];
      values[i+2*nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_z[j];
    }
  }
}

static void N_H_RT2_3D_DeriveEtaEta(double xi, double eta, double zeta,
                                    double *values)
{
  int nBF = 108; // number of basis functions
  // monomials x-component, y-component and z-component
  double mon_x[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,0,0,0,0,0,0,
  xi*2,0,0,0,0,0,0,0,0,
  2*zeta,0,0,0,0,0,
  //4th degree polynomials
  0,0,0,0,0,0,
  xi*xi*2,0,0,0,0,0,0,0,0,
  xi*2*zeta,0,0,0,0,0,
  2*zeta*zeta,0,0,
  //5th degree polynomials
  xi*xi*xi*2,0,0,0,0,0,0,0,0,
  xi*xi*2*zeta,0,0,0,0,0,
  xi*2*zeta*zeta,0,0,
  //6th degree polynomials
  xi*xi*xi*2*zeta,0,0,0,0,0,
  xi*xi*2*zeta*zeta,0,0,
  //7t h degree polynomials
  xi*xi*xi*2*zeta*zeta,0,0};
  double mon_y[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,
  //3rd degree polynomials
  0,3*2*eta,0,0,0,0,0,0,0,
  0,xi*20,0,0,0,0,0,0,0,
  0,2*zeta,0,0,zeta*zeta,0,
  //4th degree polynomials
  0,xi*3*2*eta,0,0,3*2*eta*zeta,0,
  0,xi*xi*2,0,0,0,0,0,0,0,
  0,xi*2*zeta,0,0,0,0,
  0,2*zeta*zeta,0,
  //5th degree polynomials
  0,xi*xi*3*2*eta,0,0,xi*3*2*eta*zeta,0,0,3*2*eta*zeta*zeta,0,
  0,xi*xi*2*zeta,0,0,0,0,
  0,xi*2*zeta*zeta,0,
  //6th degree polynomials
  0,xi*xi*3*2*eta*zeta,0,0,xi*3*2*eta*zeta*zeta,0,
  0,xi*xi*2*zeta*zeta,0,
  //7t h degree polynomials
  0,xi*xi*3*2*eta*zeta*zeta,0};
  double mon_z[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,
  //3rd degree polynomials
  0,0,0,0,0,0,0,0,0,
  0,0,xi*2,0,0,0,0,0,0,
  0,0,2*zeta,0,0,0,
  //4th degree polynomials
  0,0,0,0,0,0,
  0,0,xi*xi*2,0,0,0,0,0,0,
  0,0,xi*2*zeta,0,0,0,
  0,0,2*zeta*zeta,
  //5th degree polynomials
  0,0,0,0,0,0,0,0,2*zeta*zeta*zeta,
  0,0,xi*xi*2*zeta,0,0,0,
  0,0,xi*2*zeta*zeta,
  //6th degree polynomials
  0,0,0,0,0,xi*2*zeta*zeta*zeta,
  0,0,xi*xi*2*zeta*zeta,
  //7t h degree polynomials
  0,0,xi*xi*2*zeta*zeta*zeta};

  memset(values, 0.0, 3*nBF*SizeOfDouble); // 3 is the space dimension
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i      ] += N_H_RT2_3D_CM[i+j*nBF]*mon_x[j];
      values[i+  nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_y[j];
      values[i+2*nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_z[j];
    }
  }
}

static void N_H_RT2_3D_DeriveEtaZeta(double xi, double eta, double zeta,
                                     double *values)
{
  int nBF = 108; // number of basis functions
  // monomials x-component, y-component and z-component
  double mon_x[]={
      //const + 1st degree polynomials
      0,0,0,0,0,0,0,0,0,0,0,0,
      //2nd degree polynomials
      0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,
      //3rd degree polynomials
      0,0,0,0,0,0,0,0,0,
      0,0,0,xi,0,0,0,0,0,
      2*eta,0,0,2*zeta,0,0,
      //4th degree polynomials
      0,0,0,0,0,0,
      0,0,0,xi*xi,0,0,0,0,0,
      xi*2*eta,0,0,xi*2*zeta,0,0,
      2*eta*2*zeta,0,0,
      //5th degree polynomials
      0,0,0,xi*xi*xi,0,0,0,0,0,
      xi*xi*2*eta,0,0,xi*xi*2*zeta,0,0,
      xi*2*eta*2*zeta,0,0,
      //6th degree polynomials
      xi*xi*xi*2*eta,0,0,xi*xi*xi*2*zeta,0,0,
      xi*xi*2*eta*2*zeta,0,0,
      //7t h degree polynomials
      xi*xi*xi*2*eta*2*zeta,0,0};
  double mon_y[]={
      //const + 1st degree polynomials
      0,0,0,0,0,0,0,0,0,0,0,0,
      //2nd degree polynomials
      0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
      //3rd degree polynomials
      0,0,0,0,0,0,0,0,0,
      0,0,0,0,xi,0,0,0,0,
      0,2*eta,0,0,2*zeta,0,
      //4th degree polynomials
      0,0,0,0,3*eta*eta,0,
      0,0,0,0,xi*xi,0,0,0,0,
      0,xi*2*eta,0,0,xi*2*zeta,0,
      0,2*eta*2*zeta,0,
      //5th degree polynomials
      0,0,0,0,xi*3*eta*eta,0,0,3*eta*eta*2*zeta,0,
      0,xi*xi*2*eta,0,0,xi*xi*2*zeta,0,
      0,xi*2*eta*2*zeta,0,
      //6th degree polynomials
      0,xi*xi*3*eta*eta,0,0,xi*3*eta*eta*2*zeta,0,
      0,xi*xi*2*eta*2*zeta,0,
      //7t h degree polynomials
      0,xi*xi*3*eta*eta*2*zeta,0};
  double mon_z[]={
      //const + 1st degree polynomials
      0,0,0,0,0,0,0,0,0,0,0,0,
      //2nd degree polynomials
      0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
      //3rd degree polynomials
      0,0,0,0,0,0,0,0,0,
      0,0,0,0,0,xi,0,0,0,
      0,0,2*eta,0,0,2*zeta,
      //4th degree polynomials
      0,0,0,0,0,3*zeta*zeta,
      0,0,0,0,0,xi*xi,0,0,0,
      0,0,xi*2*eta,0,0,xi*2*zeta,
      0,0,2*eta*2*zeta,
      //5th degree polynomials
      0,0,0,0,0,xi*3*zeta*zeta,0,0,2*eta*3*zeta*zeta,
      0,0,xi*xi*2*eta,0,0,xi*xi*2*zeta,
      0,0,xi*2*eta*2*zeta,
      //6th degree polynomials
      0,0,xi*xi*3*zeta*zeta,0,0,xi*2*eta*3*zeta*zeta,
      0,0,xi*xi*2*eta*2*zeta,
      //7t h degree polynomials
      0,0,xi*xi*2*eta*3*zeta*zeta};

  memset(values, 0.0, 3*nBF*SizeOfDouble); // 3 is the space dimension
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i      ] += N_H_RT2_3D_CM[i+j*nBF]*mon_x[j];
      values[i+  nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_y[j];
      values[i+2*nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_z[j];
    }
  }
}

static void N_H_RT2_3D_DeriveZetaZeta(double xi, double eta, double zeta,
                                      double *values)
{
  int nBF = 108; // number of basis functions
  // monomials x-component, y-component and z-component
  double mon_x[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,
  //3rd degree polynomials
  0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,xi*2,0,0,
  0,0,0,eta*2,0,0,
  //4th degree polynomials
  0,0,0,0,0,0,
  0,0,0,0,0,0,xi*xi*2,0,0,
  0,0,0,xi*eta*2,0,0,
  eta*eta*2,0,0,
  //5th degree polynomials
  0,0,0,0,0,0,xi*xi*xi*2,0,0,
  0,0,0,xi*xi*eta*2,0,0,
  xi*eta*eta*2,0,0,
  //6th degree polynomials
  0,0,0,xi*xi*xi*eta*2,0,0,
  xi*xi*eta*eta*2,0,0,
  //7t h degree polynomials
  xi*xi*xi*eta*eta*2,0,0};
  double mon_y[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
  //3rd degree polynomials
  0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,xi*2,0,
  0,0,0,0,eta*2,0,
  //4th degree polynomials
  0,0,0,0,0,0,
  0,0,0,0,0,0,0,xi*xi*2,0,
  0,0,0,0,xi*eta*2,0,
  0,eta*eta*2,0,
  //5th degree polynomials
  0,0,0,0,0,0,0,eta*eta*eta*2,0,
  0,0,0,0,xi*xi*eta*2,0,
  0,xi*eta*eta*2,0,
  //6th degree polynomials
  0,0,0,0,xi*eta*eta*eta*2,0,
  0,xi*xi*eta*eta*2,0,
  //7t h degree polynomials
  0,xi*xi*eta*eta*eta*2,0};
  double mon_z[]={
  //const + 1st degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,
  //2nd degree polynomials
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,
  //3rd degree polynomials
  0,0,3*2*zeta,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,xi*2,
  0,0,0,0,0,eta*2,
  //4th degree polynomials
  0,0,xi*3*2*zeta,0,0,eta*3*2*zeta,
  0,0,0,0,0,0,0,0,xi*xi*2,
  0,0,0,0,0,xi*eta*2,
  0,0,eta*eta*2,
  //5th degree polynomials
  0,0,xi*xi*3*2*zeta,0,0,xi*eta*3*2*zeta,0,0,eta*eta*3*2*zeta,
  0,0,0,0,0,xi*xi*eta*2,
  0,0,xi*eta*eta*2,
  //6th degree polynomials
  0,0,xi*xi*eta*3*2*zeta,0,0,xi*eta*eta*3*2*zeta,
  0,0,xi*xi*eta*eta*2,
  //7t h degree polynomials
  0,0,xi*xi*eta*eta*3*2*zeta};

  memset(values, 0.0, 3*nBF*SizeOfDouble); // 3 is the space dimension
  for(int i=0; i<nBF; i++)
  {
    for(int j=0; j<nBF; j++)
    {
      values[i      ] += N_H_RT2_3D_CM[i+j*nBF]*mon_x[j];
      values[i+  nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_y[j];
      values[i+2*nBF] += N_H_RT2_3D_CM[i+j*nBF]*mon_z[j];
    }
  }
}

TBaseFunct3D *BF_N_H_RT2_3D_Obj =
new TBaseFunct3D(108, BF_N_H_RT2_3D, BFUnitHexahedron,
                 N_H_RT2_3D_Funct, N_H_RT2_3D_DeriveXi,
                 N_H_RT2_3D_DeriveEta, N_H_RT2_3D_DeriveZeta,
                 N_H_RT2_3D_DeriveXiXi, N_H_RT2_3D_DeriveXiEta,
                 N_H_RT2_3D_DeriveXiZeta, N_H_RT2_3D_DeriveEtaEta,
                 N_H_RT2_3D_DeriveEtaZeta, N_H_RT2_3D_DeriveZetaZeta,
                 7, 1, 0, NULL, 3);
